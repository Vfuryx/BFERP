<?php

namespace App\Models;

use Carbon\Carbon;

class CancelPurchase extends Model
{
    protected $table = 'cancel_purchases';

    protected $fillable = ['purchases_id'];

    protected $dates = ['submit_at'];

    //设置类型
    protected $casts = [
        'is_submit' => 'boolean',
        'status' => 'boolean'
    ];

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        // 监听模型创建事件，在写入数据库之前触发
        static::creating(function($model) {
            // 如果模型的 no 字段为空
            if (!$model->cancel_purchases_no) {
                // 调用 findAvailableNo 生成订单流水号
                $model->cancel_purchases_no = static::findAvailableNo();
                // 如果生成失败，则终止创建订单
                if (!$model->cancel_purchases_no) {
                    return false;
                }
            }
            // 如果模型的 creator 字段为空
            if (!$model->creator) {

                $model->creator = 'admin';
                // 如果生成失败，则终止创建订单
                if (!$model->creator) {
                    return false;
                }
            }
        });
    }

    /**
     * 提交
     */
    public function input()
    {
        $this->is_submit = 1;
        $this->submitter = 'admin';
        $this->submit_at = Carbon::now();
        $this->save();
    }

    public static function findAvailableNo()
    {
        // 订单流水号前缀
        $prefix = 'CP';

        for ($i = 0; $i < 10; $i++) {
            // 随机生成 6 位的数字
            $no = $prefix . date('YmdHis') . str_pad(mt_rand(1, 99999), 5, 0, STR_PAD_LEFT);
            // 判断是否已经存在
            if (!static::query()->where('cancel_purchases_no', $no)->exists()) {
                return $no;
            }
        }

        return false;
    }


    public function purchase()
    {
        return $this->belongsTo(Purchase::class, 'purchases_id');
    }

    public function cancelPurchaseDetails()
    {
        return $this->hasMany(CancelPurchaseDetail::class,'cancel_purchases_id');
    }


}
